<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.wms.product.mapper.ProductMapper">

    <resultMap id="BaseResultMap" type="org.wms.common.entity.product.Product">
        <id property="id" column="id"/>
        <result property="productName" column="product_name"/>
        <result property="productCode" column="product_code"/>
        <result property="categoryId" column="category_id"/>
        <result property="brand" column="brand"/>
        <result property="model" column="model"/>
        <result property="spec" column="spec"/>
        <result property="price" column="price"/>
        <result property="description" column="description"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap id="ProductVoResultMap" type="org.wms.product.model.vo.ProductVo" extends="BaseResultMap">
        <result property="categoryName" column="category_name"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,product_name,product_code,category_id,brand,model,
        spec,price,image_url,
        description,create_time,update_time
    </sql>

    <!-- 递归查询分类名称 -->
    <select id="selectProductVoPage" resultMap="ProductVoResultMap">
        WITH RECURSIVE category_path(id, category_name, parent_id, full_path) AS (SELECT id,
                                                                                         category_name,
                                                                                         parent_id,
                                                                                         category_name as full_path
                                                                                  FROM product_cat
                                                                                  WHERE parent_id = '0'
                                                                                     OR parent_id IS NULL

                                                                                  UNION ALL

                                                                                  SELECT pc.id,
                                                                                         pc.category_name,
                                                                                         pc.parent_id,
                                                                                         CONCAT(cp.full_path, '-', pc.category_name) as full_path
                                                                                  FROM product_cat pc
                                                                                           JOIN category_path cp ON pc.parent_id = cp.id)
        SELECT p.*,
               cp.full_path as category_name
        FROM product p
                 LEFT JOIN category_path cp ON p.category_id = cp.id
            ${ew.customSqlSegment}
    </select>
    <select id="selectProductById" resultType="org.wms.product.model.vo.ProductVo">
        WITH RECURSIVE category_path(id, category_name, parent_id, full_path) AS (SELECT id,
                                                                                         category_name,
                                                                                         parent_id,
                                                                                         category_name as full_path
                                                                                  FROM product_cat
                                                                                  WHERE parent_id = '0'
                                                                                     OR parent_id IS NULL

                                                                                  UNION ALL

                                                                                  SELECT pc.id,
                                                                                         pc.category_name,
                                                                                         pc.parent_id,
                                                                                         CONCAT(cp.full_path, '-', pc.category_name) as full_path
                                                                                  FROM product_cat pc
                                                                                           JOIN category_path cp ON pc.parent_id = cp.id)
        SELECT p.*,
               cp.full_path as category_name
        FROM product p
                 LEFT JOIN category_path cp ON p.category_id = cp.id
        where p.id = #{id}
    </select>
    <select id="countCatInfo" resultType="org.wms.common.model.vo.CountVo">
        -- 递归获取所有分类的路径：父-子-孙...
        WITH RECURSIVE
            category_path AS (SELECT id,
                                     category_name,
                                     parent_id,
                                     category_name AS full_path
                              FROM product_cat
                              WHERE parent_id IS NULL

                              UNION ALL

                              SELECT c.id,
                                     c.category_name,
                                     c.parent_id,
                                     CONCAT(cp.full_path, '-', c.category_name)
                              FROM product_cat c
                                       JOIN
                                   category_path cp ON c.parent_id = cp.id),

-- 把分类和产品关联上（有的分类可能没产品）
            product_with_category AS (SELECT cp.full_path,
                                             cp.id AS category_id,
                                             p.id  AS product_id
                                      FROM category_path cp
                                               LEFT JOIN
                                           product p ON p.category_id = cp.id)

-- 最终统计每个分类路径下的产品数量
        SELECT full_path         AS `name`,
               COUNT(product_id) AS count
        FROM product_with_category
        GROUP BY full_path
        ORDER BY full_path;

    </select>
</mapper>
